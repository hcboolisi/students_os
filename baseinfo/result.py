# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'result.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QAbstractItemView, QTableWidgetItem, QApplication
# sys.path.append("../")
from service import service


class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 450)
        MainWindow.setWindowFlags(QtCore.Qt.MSWindowsFixedSizeDialogHint)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(550, 10, 41, 32))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(600, 10, 41, 32))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(650, 10, 41, 32))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(700, 10, 41, 32))
        self.pushButton_4.setObjectName("pushButton_4")

        self.tablewidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tablewidget.setGeometry(QtCore.QRect(5, 49, 790, 321))
        self.tablewidget.setObjectName("tableView")
        self.tablewidget.setObjectName("tableView")
        self.tablewidget.setShowGrid(True)
        self.tablewidget.setAlternatingRowColors(True)
        self.tablewidget.resizeColumnsToContents()
        self.tablewidget.resizeRowsToContents()
        self.tablewidget.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.query()

        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(200, 390, 72, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(749, 10, 41, 32))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(MainWindow.close)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 72, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.comboBox.setGeometry(QtCore.QRect(90, 11, 88, 31))
        self.comboBox.setObjectName("comboBox")

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(180, 10, 72, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")

        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(255, 11, 105, 31))
        self.comboBox_2.setObjectName("comboBox_2")
        self.bindGrade()
        self.comboBox_2.currentIndexChanged.connect(self.bindClass)

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(370, 10, 72, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        self.comboBox_4 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_4.setGeometry(QtCore.QRect(450, 10, 71, 31))
        self.comboBox_4.setObjectName("comboBox_4")
        self.bindClass()
        self.comboBox_4.currentIndexChanged.connect(self.bindstuName)

        self.comboBox_3 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_3.setGeometry(QtCore.QRect(280, 390, 131, 31))
        self.comboBox_3.setObjectName("comboBox_3")
        self.bindstuName()

        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(434, 390, 72, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.comboBox_5 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_5.setGeometry(QtCore.QRect(510, 390, 131, 31))
        self.comboBox_5.setObjectName("comboBox_5")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(660, 390, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(710, 390, 71, 31))
        self.lineEdit.setObjectName("lineEdit")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.bindCbox()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "成绩管理"))
        self.pushButton.setText(_translate("MainWindow", "刷新"))
        self.pushButton_2.setText(_translate("MainWindow", "添加"))
        self.pushButton_3.setText(_translate("MainWindow", "修改"))
        self.pushButton_4.setText(_translate("MainWindow", "删除"))
        self.label_6.setText(_translate("MainWindow", "学生姓名："))
        self.pushButton_5.setText(_translate("MainWindow", "退出"))
        self.label.setText(_translate("MainWindow", "考试种类："))
        self.label_2.setText(_translate("MainWindow", "选择年级："))
        self.label_3.setText(_translate("MainWindow", "选择班级："))
        self.label_4.setText(_translate("MainWindow", "考试科目："))
        self.label_5.setText(_translate("MainWindow", "成绩："))

    def query(self):
        self.tablewidget.setRowCount(0)
        kind_name = self.comboBox.currentText()
        grade_name = self.comboBox_2.currentText()
        class_name = self.comboBox_4.currentText()
        if kind_name == "所有":
            if grade_name == "所有":
                if class_name == "所有" or class_name == "":
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo ")
                else:
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            className=%s", class_name)
            else:
                if class_name == "所有":
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            gradeName=%s", grade_name)
                else:
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            gradeName=%s and className=%s", grade_name, class_name)
        else:
            if grade_name == "所有":
                if class_name == "所有" or class_name == "":
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            kindName=%s", kind_name)
                else:
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            kindName=%s and className=%s", kind_name, class_name)
            else:
                if class_name == "所有":
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            kindName=%s and gradeName=%s", kind_name, grade_name)
                else:
                    result = service.query("select ID, stuID, stuName, CONCAT(gradeName,className),\
                                            subName, kindName, result from v_resultinfo where \
                                            kindName=%s and gradeName=%s and className=%s",
                                           kind_name, grade_name, class_name)
        row = len(result)
        self.tablewidget.setColumnCount(7)
        self.tablewidget.setRowCount(row)
        self.tablewidget.setHorizontalHeaderLabels(["编号", "学生编号", "学生姓名", "班级",
                                                    "科目", "种类", "成绩"])
        for i in range(row):
            for j in range(self.centralwidget.ColumnCount()):
                date = QTableWidgetItem(str(result[i][j]))
                self.tablewidget.setItem(i, j, date)

    def bindCbox(self):
        self.comboBox.addItem("所有")
        result = service.query("select kindName from tb_examkinds")
        for i in result:
            self.comboBox.addItem(i[0])

        self.comboBox_5.addItem("所有")
        result = service.query("select subName from tb_subject")
        for i in result:
            self.comboBox_5.addItem(i[0])

        result = service.query("select stuName from tb_student")
        for i in result:
            self.comboBox_3.addItem(i[0])

    def bindGrade(self):
        self.comboBox_2.addItem("所有")
        result = service.query("select gradeName from tb_grade")
        for i in result:
            self.comboBox_2.addItem(i[0])

    def bindClass(self):
        self.comboBox_4.clear()
        self.comboBox_4.addItem("所有")
        result = service.query("select className from v_classinfo where gradeName=%s",
                               self.comboBox_2.currentText())
        for i in result:
            self.comboBox_4.addItem(i[0])

    def bindstuName(self):
        self.comboBox_3.clear()
        if self.comboBox_4.currentText() != "所有":
            result = service.query("select stuName from v_studentinfo where gradeName=%s and className=%s",
                                   self.comboBox_2.currentText(), self.comboBox_4.currentText())
        else:
            result = service.query("select stuName from v_studentinfo where gradeName=%s",
                                   self.comboBox_2.currentText())
        for i in result:
            self.comboBox_3.addItem(i[0])


if __name__ == "__main__":
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())