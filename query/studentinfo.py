# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'studentinfo.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QMainWindow, QAbstractItemView, QTableWidgetItem, QMessageBox
from service import service

class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 400)
        MainWindow.setWindowFlags(QtCore.Qt.MSWindowsFixedSizeDialogHint)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(660, 10, 61, 32))
        self.pushButton_4.setObjectName("pushButton_4")

        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(5, 49, 790, 341))
        self.tableWidget.setObjectName("tableView")
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.resizeColumnsToContents()
        self.tableWidget.resizeRowsToContents()
        self.tableWidget.setEditTriggers(QAbstractItemView.NoEditTriggers)

        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(729, 10, 61, 32))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(MainWindow.close)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 10, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(230, 10, 141, 31))
        self.comboBox.setObjectName("comboBox")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(390, 10, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setKerning(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(530, 10, 113, 31))
        self.lineEdit.setObjectName("lineEdit")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.bindCbox()
        self.query()
        self.pushButton_4.clicked.connect(self.query)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "学生信息查询"))
        self.pushButton_4.setText(_translate("MainWindow", "查 询"))
        self.pushButton_5.setText(_translate("MainWindow", "退 出"))
        self.label.setText(_translate("MainWindow", "选择查询列表："))
        self.label_2.setText(_translate("MainWindow", "输入查询关键字："))

    def bindCbox(self):
        self.comboBox.clear()
        list = ["所有", "学生编号", "学生姓名", "班级", "性别", "年龄", "家庭地址", "联系电话"]
        for i in list:
            self.comboBox.addItem(i)

    def query(self):
        self.tableWidget.setRowCount(0)
        select = self.comboBox.currentText()
        key = self.lineEdit.text()
        if select == "所有":
            result = service.query("select stuID,stuName,CONCAT(gradeName,className),\
                                   sex,age,address,phone from v_studentinfo")
        else:
            if select == "学生编号":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where stuID like '%" + key + "%'"
            elif select == "学生姓名":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where stuName like '%" + key + "%'"
            elif select == "班级":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where gradeName like '%" + key + "%'\
                     or className like '%" + key + "%'"
            elif select == "性别":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where sex like '%" + key + "%'"
            elif select == "年龄":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where age like '%" + key + "%'"
            elif select == "家庭地址":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where address like '%" + key + "%'"
            elif select == "联系电话":
                sql = "select stuID,stuName,CONCAT(gradeName,className),\
                      sex,age,address,phone from v_studentinfo where phone like '%" + key + "%'"
            result = service.query2(sql)
        row = len(result)
        self.tableWidget.setRowCount(row)
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setHorizontalHeaderLabels(["学生编号", "学生姓名", "班级",
                                                   "性别", "年龄", "家庭地址", "联系电话"])
        if len(result) > 0:
            for i in range(row):
                for j in range(self.tableWidget.columnCount()):
                    date = QTableWidgetItem(str(result[i][j]))
                    date.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
                    self.tableWidget.setItem(i, j, date)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())